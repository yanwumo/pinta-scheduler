/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1

import (
	v1 "github.com/qed-usc/pinta-scheduler/pkg/apis/pinta/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PintaJobLister helps list PintaJobs.
type PintaJobLister interface {
	// List lists all PintaJobs in the indexer.
	List(selector labels.Selector) (ret []*v1.PintaJob, err error)
	// PintaJobs returns an object that can list and get PintaJobs.
	PintaJobs(namespace string) PintaJobNamespaceLister
	PintaJobListerExpansion
}

// pintaJobLister implements the PintaJobLister interface.
type pintaJobLister struct {
	indexer cache.Indexer
}

// NewPintaJobLister returns a new PintaJobLister.
func NewPintaJobLister(indexer cache.Indexer) PintaJobLister {
	return &pintaJobLister{indexer: indexer}
}

// List lists all PintaJobs in the indexer.
func (s *pintaJobLister) List(selector labels.Selector) (ret []*v1.PintaJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PintaJob))
	})
	return ret, err
}

// PintaJobs returns an object that can list and get PintaJobs.
func (s *pintaJobLister) PintaJobs(namespace string) PintaJobNamespaceLister {
	return pintaJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PintaJobNamespaceLister helps list and get PintaJobs.
type PintaJobNamespaceLister interface {
	// List lists all PintaJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.PintaJob, err error)
	// Get retrieves the PintaJob from the indexer for a given namespace and name.
	Get(name string) (*v1.PintaJob, error)
	PintaJobNamespaceListerExpansion
}

// pintaJobNamespaceLister implements the PintaJobNamespaceLister
// interface.
type pintaJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PintaJobs in the indexer for a given namespace.
func (s pintaJobNamespaceLister) List(selector labels.Selector) (ret []*v1.PintaJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.PintaJob))
	})
	return ret, err
}

// Get retrieves the PintaJob from the indexer for a given namespace and name.
func (s pintaJobNamespaceLister) Get(name string) (*v1.PintaJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("pintajob"), name)
	}
	return obj.(*v1.PintaJob), nil
}
